package primenet

import io.sarl.api.core.Behaviors
import io.sarl.api.core.DefaultContextInteractions
import io.sarl.api.core.ExternalContextAccess
import io.sarl.api.core.Initialize
import io.sarl.api.core.Logging
import io.sarl.api.core.OpenEventSpace
import io.sarl.api.core.OpenEventSpaceSpecification
import java.util.UUID
import io.sarl.api.core.Lifecycle
import java.util.ArrayList

agent Netbill {

	uses DefaultContextInteractions, Behaviors, Logging, ExternalContextAccess, Lifecycle

	var netspace : OpenEventSpace

	var Signature : String

	var Balance : String

	var RisultatoFirmato = new ArrayList<String>()
	

	on Initialize {
		netspace = defaultContext.getOrCreateSpaceWithSpec(typeof(OpenEventSpaceSpecification),
			occurrence.parameters.get(0) as UUID)

		netspace.registerStrongParticipant(asEventListener())

		Signature = occurrence.parameters.get(1) as String
		}
			

	on MessageToNetbill {

		var esito = "Esito positivo"
		RisultatoFirmato.add(esito)

		var Commerciante = occurrence.index.get(6)
		RisultatoFirmato.add(Commerciante)

		var Cliente = occurrence.index.get(7)
		RisultatoFirmato.add(Cliente)

		var prezzo = occurrence.index.get(1)
		RisultatoFirmato.add(prezzo)

		var descrizione = occurrence.index.get(0)
		RisultatoFirmato.add(descrizione)

		var EPOID = occurrence.index.get(5)
		RisultatoFirmato.add(EPOID)

		var chiaveK = occurrence.index.get(11)
		RisultatoFirmato.add(chiaveK)

		RisultatoFirmato.add(Signature)

		info("NetBill, risultato firmato. " + RisultatoFirmato)

		Balance = "nuovo saldo contocorrente"

		netspace.emit(new BalanceUpdate("bilancio"))
		
		netspace.emit(new AnswerNetbill(RisultatoFirmato))[it == occurrence.source]

	}

	on ForwardMessage {
		killMe
	}

	on TransactionFailed {
		info("Netbill, transazione fallita")
		killMe
	}
}

